# Copyright (c) 2019 sparetimecoders
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

variables:
  GOCACHE: "${CI_PROJECT_DIR}/_go/cache"

before_script:
  - mkdir -p ${CI_PROJECT_DIR}/_go/{pkg,bin,cache}
  - rm -rf /go/pkg
  - ln -s ${CI_PROJECT_DIR}/_go/pkg /go/pkg
  - ln -s ${CI_PROJECT_DIR}/_go/bin /go/bin

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - _go
  untracked: true

stages:
  - deps
  - test
  - build

deps:
  stage: deps
  image: golang:1.12
  script:
    - go get -mod=readonly

test:
  stage: test
  dependencies:
    - deps
  image: golang:1.12
  script:
    - find . -name "rice-box.go" -delete
    - go fmt $(go list ./...)
    - go vet $(go list ./...)
    - CGO_ENABLED=1 go test -mod=readonly -race -coverprofile=.testCoverage.txt -covermode=atomic -coverpkg=$(go list ./... | tr '\n' , | sed 's/,$//') ./...
    - go tool cover -html=.testCoverage.txt -o coverage.html
    - go tool cover -func=.testCoverage.txt
  artifacts:
    paths:
      - coverage.html

build:
  stage: build
  services:
    - docker:dind
  image: golang:1.12
  script: |
    for file in $(find ./cmd -name *.go); do
     echo "go build -o ./$(basename $(dirname ${file})) ${file}"
     GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ./$(basename $(dirname ${file})) ${file}
    done
